@model Hockey.Models.MatchesViewModel

@{
    ViewBag.Title = "Matches";
}

<h2>Matches</h2>
<meta charset="utf-8" />
<table id="MatchTable">
    <thead>
        <tr>
            <th>
                 
            </th>
            <th>
                Arena
            </th>
            <th>
                Home
            </th>
            <th>
                Gone
            </th>
            <th>
                Score
            </th>
        </tr>
    </thead>
    <tbody>
        @{

            foreach (var match in Model.matches)
            {
                <tr>
                    <td>@Html.DisplayName(match.ID.ToString())   </td>
                    <td>@Html.DisplayName(match.Arena)   </td>
                    <td>@Html.DisplayName(match.HomeTeam)   </td>
                    <td>@Html.DisplayName(match.GoneTeam)   </td>
                    <td>@Html.DisplayName(match.HomeScore.ToString()) / @Html.DisplayName(match.GoneScore.ToString())  </td>
                </tr>
            }

        }

    </tbody>
</table>

<br /><br /><br />


@using (Html.BeginForm("AddMatches", "Home", FormMethod.Post))
{
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    Hockey.Models.MatchViewModel homescore = new Hockey.Models.MatchViewModel();

    Hockey.Models.MatchViewModel gonescore = new Hockey.Models.MatchViewModel();
    <fieldset>
        <legend>Arena</legend>
        <select id="Arena" name="Arena">
            <option value="0">--Select Arena--</option>
            @{
                foreach (var Arena in Model.ArenaList)
                {
                    <option value="@Arena.ID">@Html.DisplayName(Arena.Arenaname)</option>
                }
            }
        </select>
    </fieldset>
    <br />
    <fieldset>
        <legend>Home Team</legend>
        <select id="HomeTeam" name="HomeTeam">
            <option value="0">--Select Team--</option>
            @{
                foreach (var Team in Model.TeamList)
                {
                    <option value="@Team.ID">@Html.DisplayName(Team.Teamname)</option>
                }
            }
        </select>
    </fieldset>
    <br />
    <fieldset>
        <legend>Gone Team</legend>
        <select id="GoneTeam" name="GoneTeam">
            <option value="0">--Select Team--</option>
            @{
                foreach (var Team in Model.TeamList)
                {
                    <option value="@Team.ID">@Html.DisplayName(Team.Teamname)</option>
                }
            }
        </select>
    </fieldset>
    <br />
    <fieldset>
        <legend>Scores</legend>
        <p>Home</p>
        @Html.EditorFor(x => homescore.HomeScore, new { htmlAttributes = new { @Name = "HomeScore", @id = "HomeScore", @min = "0" } })
    </fieldset>
    <br />
    <fieldset>
        <p>Gone</p>
        @Html.EditorFor(x => gonescore.GoneScore, new { htmlAttributes = new { @Name = "GoneScore", @id = "GoneScore", @min = "0" } })
    </fieldset>
    <br />

    <input type="submit" value="Add" />
}
<br />

<legend>Remove Match</legend>

@using (Html.BeginForm("RemoveMatches", "Home", FormMethod.Post))
{
    Hockey.Models.Match ID = new Hockey.Models.Match();
    @Html.EditorFor(x => ID.ID, new { htmlAttributes = new { @Name = "ID", @id = "ID", @min = "0" } })
    <input type="submit" value="Remove" />
}